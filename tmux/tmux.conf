# -- user defined overrides ----------------------------------------------------
if '[ -f ~/.config/tmux/tmux.conf.local ]' 'source ~/.config/tmux/tmux.conf.local'

# edit configuration
bind e new-window -n '~/.config/tmux/tmux.conf.local' "sh -c '\${EDITOR:-nvim} ~/.config/tmux/* && tmux source ~/.config/tmux/tmux.conf && tmux display \"~/.config/tmux/tmux.conf sourced\"'"

# -- general -------------------------------------------------------------------
bind r source ~/.config/tmux/tmux.conf\; display "~/.config/tmux/tmux.conf sourced!" # reload tmux

set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 800                   # increase repeat timeout
set -s focus-events on

set -g default-terminal "screen-256color"
set -g default-shell /bin/zsh

set-window-option -g automatic-rename

# new window with prompt
bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# -- display -------------------------------------------------------------------
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g status-interval 10     # redraw status line every 10 seconds

# -- navigation -------------------------------------------------------------------
# Vi copypaste mode
set-window-option -g mode-keys vi

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R


# vim/neovim 
is_vim="ps -o state= -o comm= -t '#{pane_tty}'  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
# using alt key
bind -n M-h run "($is_vim && tmux send-keys C-w h) || tmux select-pane -L"
bind -n M-j run "($is_vim && tmux send-keys C-w j) || tmux select-pane -D"
bind -n M-k run "($is_vim && tmux send-keys C-w k) || tmux select-pane -U"
bind -n M-l run "($is_vim && tmux send-keys C-w l) || tmux select-pane -R"
bind-key -n M-p if-shell "$is_vim" "send-keys C-w p" "select-pane -l"


# previous pane, same key as vim 
unbind ';'
unbind p
bind p select-pane -l

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one


# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
# -r means it can be repeat without hit prefix 
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

bind-key Up swap-window -t -1\; select-window -t -1
bind-key Down swap-window -t +1\; select-window -t +1 

unbind -T copy-mode-vi MouseDragEnd1Pane

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------

# bind b list-buffers  # list paste buffers
# bind p paste-buffer  # paste from the top paste buffer
# bind P choose-buffer # choose which buffer to paste from

# -- theme -------------------------------------------------------------------

